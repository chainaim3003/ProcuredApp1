"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./contexts/PaymentContext.tsx":
/*!*************************************!*\
  !*** ./contexts/PaymentContext.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaymentProvider: function() { return /* binding */ PaymentProvider; },\n/* harmony export */   usePayment: function() { return /* binding */ usePayment; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ usePayment,PaymentProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst PaymentContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction usePayment() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(PaymentContext);\n    if (context === undefined) {\n        throw new Error(\"usePayment must be used within a PaymentProvider\");\n    }\n    return context;\n}\n_s(usePayment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction PaymentProvider(param) {\n    let { children } = param;\n    _s1();\n    const [payment, setPayment] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isProcessing: false,\n        lastPayment: null,\n        usdcBalance: 0,\n        error: null\n    });\n    const [x402Service, setX402Service] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Initialize X402 service\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const initializeX402Service = async ()=>{\n            try {\n                // Dynamic import to handle potential module issues\n                let X402Service;\n                let createX402Service;\n                try {\n                    const x402Module = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_lib_x402-service_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/x402-service */ \"(app-pages-browser)/./lib/x402-service.ts\"));\n                    X402Service = x402Module.X402Service;\n                    createX402Service = x402Module.createX402Service;\n                } catch (importError) {\n                    console.warn(\"X402 service import failed, using mock implementation:\", importError);\n                    // Fallback to mock implementation\n                    const mockModule = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_lib_mock-x402-client_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/mock-x402-client */ \"(app-pages-browser)/./lib/mock-x402-client.ts\"));\n                    X402Service = mockModule.X402Client;\n                    createX402Service = ()=>new X402Service({});\n                }\n                const service = createX402Service();\n                setX402Service(service);\n                console.log(\"✅ X402 service initialized\");\n            } catch (error) {\n                console.error(\"Failed to initialize X402 service:\", error);\n                // Don't set error state, just log it and continue with mock\n                console.warn(\"Continuing with mock X402 implementation\");\n                // Use mock implementation as fallback\n                try {\n                    const mockModule = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_lib_mock-x402-client_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/mock-x402-client */ \"(app-pages-browser)/./lib/mock-x402-client.ts\"));\n                    const MockX402Client = mockModule.X402Client;\n                    const mockService = new MockX402Client({});\n                    setX402Service(mockService);\n                    console.log(\"✅ Mock X402 service initialized as fallback\");\n                } catch (mockError) {\n                    console.error(\"Failed to initialize mock X402 service:\", mockError);\n                    setPayment((prev)=>({\n                            ...prev,\n                            error: \"Failed to initialize X402 service\"\n                        }));\n                }\n            }\n        };\n        initializeX402Service();\n    }, []);\n    const initiatePayment = async (params)=>{\n        if (!x402Service) {\n            const error = \"X402 service not initialized\";\n            setPayment((prev)=>({\n                    ...prev,\n                    error\n                }));\n            return {\n                success: false,\n                error\n            };\n        }\n        setPayment((prev)=>({\n                ...prev,\n                isProcessing: true,\n                error: null\n            }));\n        try {\n            const result = await x402Service.initiatePayment(params);\n            setPayment((prev)=>({\n                    ...prev,\n                    isProcessing: false,\n                    lastPayment: result,\n                    error: result.success ? null : result.error || \"Payment failed\"\n                }));\n            return result;\n        } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : \"Payment failed\";\n            setPayment((prev)=>({\n                    ...prev,\n                    isProcessing: false,\n                    error: errorMessage\n                }));\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n    };\n    const getPaymentRequirements = async (resource)=>{\n        if (!x402Service) {\n            console.error(\"X402 service not initialized\");\n            return null;\n        }\n        try {\n            return await x402Service.getPaymentRequirements(resource);\n        } catch (error) {\n            console.error(\"Failed to get payment requirements:\", error);\n            return null;\n        }\n    };\n    const verifyPayment = async (paymentHeader, requirements)=>{\n        if (!x402Service) {\n            console.error(\"X402 service not initialized\");\n            return false;\n        }\n        try {\n            return await x402Service.verifyPayment(paymentHeader, requirements);\n        } catch (error) {\n            console.error(\"Payment verification failed:\", error);\n            return false;\n        }\n    };\n    const getUSDCBalance = async (address)=>{\n        if (!x402Service) {\n            console.error(\"X402 service not initialized\");\n            return 0;\n        }\n        try {\n            const balance = await x402Service.getUSDCBalance(address);\n            setPayment((prev)=>({\n                    ...prev,\n                    usdcBalance: balance\n                }));\n            return balance;\n        } catch (error) {\n            console.error(\"Failed to get USDC balance:\", error);\n            return 0;\n        }\n    };\n    const hasSufficientBalance = async (address, amount)=>{\n        if (!x402Service) {\n            console.error(\"X402 service not initialized\");\n            return false;\n        }\n        try {\n            return await x402Service.hasSufficientBalance(address, amount);\n        } catch (error) {\n            console.error(\"Failed to check balance:\", error);\n            return false;\n        }\n    };\n    const clearError = ()=>{\n        setPayment((prev)=>({\n                ...prev,\n                error: null\n            }));\n    };\n    const value = {\n        payment,\n        initiatePayment,\n        getPaymentRequirements,\n        verifyPayment,\n        getUSDCBalance,\n        hasSufficientBalance,\n        clearError\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(PaymentContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/amanpal/Desktop/Stellar-Smart Contract-Wallets/contexts/PaymentContext.tsx\",\n        lineNumber: 196,\n        columnNumber: 5\n    }, this);\n}\n_s1(PaymentProvider, \"p/NNAf/PmWlYHSEdppoM2atjN2o=\");\n_c = PaymentProvider;\nvar _c;\n$RefreshReg$(_c, \"PaymentProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./contexts/PaymentContext.tsx\n"));

/***/ })

});