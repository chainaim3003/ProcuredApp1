"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/real-data-service.ts":
/*!**********************************!*\
  !*** ./lib/real-data-service.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealDataService: function() { return /* binding */ RealDataService; },\n/* harmony export */   realDataService: function() { return /* binding */ realDataService; }\n/* harmony export */ });\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database */ \"(app-pages-browser)/./lib/database.ts\");\n\nclass RealDataService {\n    // Purchase Order Management\n    async createPurchaseOrder(data) {\n        console.log(\"\\uD83D\\uDCDD Creating real purchase order:\", data);\n        const po = await _database__WEBPACK_IMPORTED_MODULE_0__.database.createPurchaseOrder({\n            ...data,\n            status: \"Created\"\n        });\n        // Auto-save to localStorage\n        await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        console.log(\"✅ Purchase order created:\", po.id);\n        return po;\n    }\n    async getPurchaseOrders(userAddress, role) {\n        console.log(\"\\uD83D\\uDCCB Fetching purchase orders for \".concat(role, \":\"), userAddress);\n        if (role === \"buyer\") {\n            const user = await _database__WEBPACK_IMPORTED_MODULE_0__.database.getUser(userAddress);\n            if (!user) return [];\n            return await _database__WEBPACK_IMPORTED_MODULE_0__.database.getPurchaseOrdersByBuyer(user.lei);\n        } else {\n            const user = await _database__WEBPACK_IMPORTED_MODULE_0__.database.getUser(userAddress);\n            if (!user) return [];\n            return await _database__WEBPACK_IMPORTED_MODULE_0__.database.getPurchaseOrdersBySeller(user.lei);\n        }\n    }\n    async updatePurchaseOrderStatus(id, status) {\n        console.log(\"\\uD83D\\uDD04 Updating purchase order \".concat(id, \" status to:\"), status);\n        const updated = await _database__WEBPACK_IMPORTED_MODULE_0__.database.updatePurchaseOrder(id, {\n            status\n        });\n        if (updated) {\n            await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        }\n        return updated;\n    }\n    async updatePurchaseOrder(id, updates) {\n        console.log(\"\\uD83D\\uDD04 Updating purchase order \".concat(id, \":\"), updates);\n        const updated = await _database__WEBPACK_IMPORTED_MODULE_0__.database.updatePurchaseOrder(id, updates);\n        if (updated) {\n            await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        }\n        return updated;\n    }\n    async deletePurchaseOrder(id) {\n        console.log(\"\\uD83D\\uDDD1️ Deleting purchase order \".concat(id));\n        const success = await _database__WEBPACK_IMPORTED_MODULE_0__.database.deletePurchaseOrder(id);\n        if (success) {\n            await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        }\n        return success;\n    }\n    // User Management\n    async createOrUpdateUser(data) {\n        console.log(\"\\uD83D\\uDC64 Creating/updating user:\", data);\n        const existing = await _database__WEBPACK_IMPORTED_MODULE_0__.database.getUser(data.address);\n        if (existing) {\n            const updated = await _database__WEBPACK_IMPORTED_MODULE_0__.database.updateUser(data.address, data);\n            if (updated) {\n                await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n                return updated;\n            }\n        }\n        const user = await _database__WEBPACK_IMPORTED_MODULE_0__.database.createUser({\n            ...data,\n            isActive: true\n        });\n        await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        return user;\n    }\n    async getUser(address) {\n        return await _database__WEBPACK_IMPORTED_MODULE_0__.database.getUser(address);\n    }\n    // Credential Management\n    async createCredential(data) {\n        console.log(\"\\uD83D\\uDD10 Creating credential:\", data.type, \"for user:\", data.userAddress);\n        const credential = await _database__WEBPACK_IMPORTED_MODULE_0__.database.createCredential(data);\n        await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        return credential;\n    }\n    async getCredentials(userAddress) {\n        return await _database__WEBPACK_IMPORTED_MODULE_0__.database.getCredentialsByUser(userAddress);\n    }\n    async validateCredentials(userAddress) {\n        const credentials = await this.getCredentials(userAddress);\n        const qvi = credentials.find((c)=>c.type === \"QVI\" && c.isValid);\n        const oor = credentials.find((c)=>c.type === \"OOR\" && c.isValid);\n        const ecr = credentials.find((c)=>c.type === \"ECR\" && c.isValid);\n        return {\n            hasQVI: !!qvi,\n            hasOOR: !!oor,\n            hasECR: !!ecr,\n            isValid: !!(qvi && oor && ecr),\n            credentials\n        };\n    }\n    // Payment Management\n    async createPayment(data) {\n        console.log(\"\\uD83D\\uDCB3 Creating payment record:\", data.txHash);\n        const payment = await _database__WEBPACK_IMPORTED_MODULE_0__.database.createPayment({\n            ...data,\n            network: \"stellar\",\n            token: \"USDC\"\n        });\n        // Update purchase order status to 'Paid'\n        await this.updatePurchaseOrderStatus(data.purchaseOrderId, \"Paid\");\n        await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        return payment;\n    }\n    async getPayments(purchaseOrderId) {\n        return await _database__WEBPACK_IMPORTED_MODULE_0__.database.getPaymentsByPurchaseOrder(purchaseOrderId);\n    }\n    async updatePaymentStatus(txHash, status) {\n        console.log(\"\\uD83D\\uDD04 Updating payment \".concat(txHash, \" status to:\"), status);\n        const updated = await _database__WEBPACK_IMPORTED_MODULE_0__.database.updatePayment(txHash, {\n            status\n        });\n        if (updated) {\n            await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        }\n        return updated;\n    }\n    // Analytics\n    async getAnalytics() {\n        const stats = await _database__WEBPACK_IMPORTED_MODULE_0__.database.getStats();\n        const averageOrderValue = stats.totalPurchaseOrders > 0 ? stats.totalVolume / stats.totalPurchaseOrders : 0;\n        return {\n            ...stats,\n            averageOrderValue\n        };\n    }\n    // Real vLEI Integration (placeholder for production)\n    async issueRealCredentials(userAddress, role) {\n        console.log(\"\\uD83C\\uDFDB️ Issuing real vLEI credentials for:\", userAddress, role);\n        // In production, this would integrate with real KERIA agents\n        // For now, we'll create realistic mock credentials that persist\n        const credentials = [];\n        const now = new Date();\n        const expiresAt = new Date(now.getTime() + 365 * 24 * 60 * 60 * 1000) // 1 year\n        ;\n        // QVI Credential\n        const qviCredential = await this.createCredential({\n            id: \"qvi_\".concat(userAddress, \"_\").concat(Date.now()),\n            userAddress,\n            type: \"QVI\",\n            credentialData: {\n                issuer: \"GLEIF External QVI\",\n                subject: role === \"buyer\" ? \"TechCorp Inc.\" : \"SupplierCo LLC\",\n                lei: role === \"buyer\" ? \"506700GE1G29325QX363\" : \"549300XOCUZD4EMKGY96\",\n                legalName: role === \"buyer\" ? \"TechCorp Inc.\" : \"SupplierCo LLC\",\n                status: \"Active\"\n            },\n            isValid: true,\n            issuedAt: now,\n            expiresAt\n        });\n        credentials.push(qviCredential);\n        // OOR Credential\n        const oorCredential = await this.createCredential({\n            id: \"oor_\".concat(userAddress, \"_\").concat(Date.now()),\n            userAddress,\n            type: \"OOR\",\n            credentialData: {\n                issuer: role === \"buyer\" ? \"TechCorp Inc.\" : \"SupplierCo LLC\",\n                subject: role === \"buyer\" ? \"John Doe\" : \"Jane Smith\",\n                role: role === \"buyer\" ? \"Procurement Manager\" : \"Contract Signer\",\n                authority: role === \"buyer\" ? \"CFO\" : \"CEO\",\n                status: \"Active\"\n            },\n            isValid: true,\n            issuedAt: now,\n            expiresAt\n        });\n        credentials.push(oorCredential);\n        // ECR Credential\n        const ecrCredential = await this.createCredential({\n            id: \"ecr_\".concat(userAddress, \"_\").concat(Date.now()),\n            userAddress,\n            type: \"ECR\",\n            credentialData: {\n                issuer: role === \"buyer\" ? \"TechCorp Inc.\" : \"SupplierCo LLC\",\n                subject: role === \"buyer\" ? \"John Doe\" : \"Jane Smith\",\n                engagementContext: \"Procurement\",\n                role: role === \"buyer\" ? \"Procurement Manager\" : \"Contract Signer\",\n                spendingLimit: role === \"buyer\" ? 100000 : 500000,\n                maxContractValue: role === \"buyer\" ? 100000 : 500000,\n                status: \"Active\"\n            },\n            isValid: true,\n            issuedAt: now,\n            expiresAt\n        });\n        credentials.push(ecrCredential);\n        console.log(\"✅ Real vLEI credentials issued:\", credentials.length);\n        return credentials;\n    }\n    // Real X402 Payment Integration (placeholder for production)\n    async processRealPayment(purchaseOrderId, amount, fromAddress, toAddress) {\n        console.log(\"\\uD83D\\uDCB3 Processing real X402 payment for PO:\", purchaseOrderId);\n        try {\n            // In production, this would integrate with real X402 facilitator and Stellar network\n            // For now, we'll simulate a real payment with a realistic transaction hash\n            const txHash = \"real_tx_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substring(2, 15));\n            // Create payment record\n            const payment = await this.createPayment({\n                txHash,\n                purchaseOrderId,\n                amount,\n                fromAddress,\n                toAddress,\n                status: \"Confirmed\",\n                metadata: {\n                    network: \"stellar\",\n                    token: \"USDC\",\n                    gasUsed: 100,\n                    blockNumber: Math.floor(Math.random() * 1000000) + 1000000,\n                    confirmations: 1\n                }\n            });\n            console.log(\"✅ Real payment processed:\", txHash);\n            return {\n                success: true,\n                txHash\n            };\n        } catch (error) {\n            console.error(\"❌ Real payment failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Payment failed\"\n            };\n        }\n    }\n    // Data Migration and Cleanup\n    async migrateFromLocalStorage() {\n        console.log(\"\\uD83D\\uDD04 Migrating data from localStorage to database...\");\n        // Load existing data from localStorage\n        await _database__WEBPACK_IMPORTED_MODULE_0__.database.loadFromLocalStorage();\n        // Save to ensure persistence\n        await _database__WEBPACK_IMPORTED_MODULE_0__.database.saveToLocalStorage();\n        console.log(\"✅ Data migration completed\");\n    }\n    async clearAllData() {\n        console.log(\"\\uD83D\\uDDD1️ Clearing all data...\");\n        // Clear localStorage\n        if (true) {\n            localStorage.removeItem(\"stellar_procurement_db\");\n        }\n        // Reset database\n        // Note: In production, you'd want to clear the actual database\n        console.log(\"✅ All data cleared\");\n    }\n}\n// Singleton instance\nconst realDataService = new RealDataService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/real-data-service.ts\n"));

/***/ })

});