"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_mock-x402-client_ts"],{

/***/ "(app-pages-browser)/./lib/mock-x402-client.ts":
/*!*********************************!*\
  !*** ./lib/mock-x402-client.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   X402Client: function() { return /* binding */ X402Client; }\n/* harmony export */ });\n// Mock X402 Client implementation for Phase 1\n// In Phase 3, this will be replaced with the real x402-client package\nclass X402Client {\n    async pay(params) {\n        console.log(\"\\uD83D\\uDCB3 Mock X402 payment initiated\");\n        console.log(\"\\uD83D\\uDCCA Payment details:\", {\n            resource: params.resource,\n            amount: params.amount,\n            recipient: params.recipient,\n            token: params.token,\n            network: params.network\n        });\n        // Simulate payment processing delay\n        await new Promise((resolve)=>setTimeout(resolve, 3000));\n        // Mock successful payment\n        const txHash = \"x402_\".concat(Math.random().toString(36).substring(2, 15));\n        console.log(\"âœ… Mock X402 payment completed\");\n        console.log(\"\\uD83D\\uDD17 Transaction hash: \".concat(txHash));\n        return {\n            success: true,\n            txHash,\n            error: undefined\n        };\n    }\n    async getPaymentRequirements(resource) {\n        console.log(\"\\uD83D\\uDD0D Mock X402 payment requirements for: \".concat(resource));\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        return {\n            scheme: \"exact\",\n            network: \"stellar\",\n            token: \"USDC\",\n            amount: 1000000,\n            recipient: \"GSELLER123456789\",\n            validUntil: Date.now() + 300000 // 5 minutes\n        };\n    }\n    async verifyPayment(paymentHeader) {\n        console.log(\"\\uD83D\\uDD10 Mock X402 payment verification\");\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        // Mock always returns valid\n        return true;\n    }\n    constructor(config){\n        this.config = config;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9tb2NrLXg0MDItY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSw4Q0FBOEM7QUFDOUMsc0VBQXNFO0FBcUIvRCxNQUFNQTtJQU9YLE1BQU1DLElBQUlDLE1BQXFCLEVBQTBCO1FBQ3ZEQyxRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDLGlDQUF1QjtZQUNqQ0MsVUFBVUgsT0FBT0csUUFBUTtZQUN6QkMsUUFBUUosT0FBT0ksTUFBTTtZQUNyQkMsV0FBV0wsT0FBT0ssU0FBUztZQUMzQkMsT0FBT04sT0FBT00sS0FBSztZQUNuQkMsU0FBU1AsT0FBT08sT0FBTztRQUN6QjtRQUVBLG9DQUFvQztRQUNwQyxNQUFNLElBQUlDLFFBQVFDLENBQUFBLFVBQVdDLFdBQVdELFNBQVM7UUFFakQsMEJBQTBCO1FBQzFCLE1BQU1FLFNBQVMsUUFBb0QsT0FBNUNDLEtBQUtDLE1BQU0sR0FBR0MsUUFBUSxDQUFDLElBQUlDLFNBQVMsQ0FBQyxHQUFHO1FBRS9EZCxRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDLGtDQUErQixPQUFQUztRQUVwQyxPQUFPO1lBQ0xLLFNBQVM7WUFDVEw7WUFDQU0sT0FBT0M7UUFDVDtJQUNGO0lBRUEsTUFBTUMsdUJBQXVCaEIsUUFBZ0IsRUFBZ0I7UUFDM0RGLFFBQVFDLEdBQUcsQ0FBQyxvREFBbUQsT0FBVEM7UUFDdEQsTUFBTSxJQUFJSyxRQUFRQyxDQUFBQSxVQUFXQyxXQUFXRCxTQUFTO1FBRWpELE9BQU87WUFDTFcsUUFBUTtZQUNSYixTQUFTO1lBQ1RELE9BQU87WUFDUEYsUUFBUTtZQUNSQyxXQUFXO1lBQ1hnQixZQUFZQyxLQUFLQyxHQUFHLEtBQUssT0FBTyxZQUFZO1FBQzlDO0lBQ0Y7SUFFQSxNQUFNQyxjQUFjQyxhQUFxQixFQUFvQjtRQUMzRHhCLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU0sSUFBSU0sUUFBUUMsQ0FBQUEsVUFBV0MsV0FBV0QsU0FBUztRQUVqRCw0QkFBNEI7UUFDNUIsT0FBTztJQUNUO0lBbERBaUIsWUFBWUMsTUFBd0IsQ0FBRTtRQUNwQyxJQUFJLENBQUNBLE1BQU0sR0FBR0E7SUFDaEI7QUFpREYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL21vY2steDQwMi1jbGllbnQudHM/MzE3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNb2NrIFg0MDIgQ2xpZW50IGltcGxlbWVudGF0aW9uIGZvciBQaGFzZSAxXG4vLyBJbiBQaGFzZSAzLCB0aGlzIHdpbGwgYmUgcmVwbGFjZWQgd2l0aCB0aGUgcmVhbCB4NDAyLWNsaWVudCBwYWNrYWdlXG5cbmV4cG9ydCBpbnRlcmZhY2UgWDQwMkNsaWVudENvbmZpZyB7XG4gIGZhY2lsaXRhdG9yVXJsOiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQYXltZW50UGFyYW1zIHtcbiAgcmVzb3VyY2U6IHN0cmluZ1xuICBhbW91bnQ6IG51bWJlclxuICByZWNpcGllbnQ6IHN0cmluZ1xuICB0b2tlbjogc3RyaW5nXG4gIG5ldHdvcms6IHN0cmluZ1xuICBwYXllcjogYW55XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGF5bWVudFJlc3VsdCB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW5cbiAgdHhIYXNoPzogc3RyaW5nXG4gIGVycm9yPzogc3RyaW5nXG59XG5cbmV4cG9ydCBjbGFzcyBYNDAyQ2xpZW50IHtcbiAgcHJpdmF0ZSBjb25maWc6IFg0MDJDbGllbnRDb25maWdcblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IFg0MDJDbGllbnRDb25maWcpIHtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZ1xuICB9XG5cbiAgYXN5bmMgcGF5KHBhcmFtczogUGF5bWVudFBhcmFtcyk6IFByb21pc2U8UGF5bWVudFJlc3VsdD4ge1xuICAgIGNvbnNvbGUubG9nKCfwn5KzIE1vY2sgWDQwMiBwYXltZW50IGluaXRpYXRlZCcpXG4gICAgY29uc29sZS5sb2coJ/Cfk4ogUGF5bWVudCBkZXRhaWxzOicsIHtcbiAgICAgIHJlc291cmNlOiBwYXJhbXMucmVzb3VyY2UsXG4gICAgICBhbW91bnQ6IHBhcmFtcy5hbW91bnQsXG4gICAgICByZWNpcGllbnQ6IHBhcmFtcy5yZWNpcGllbnQsXG4gICAgICB0b2tlbjogcGFyYW1zLnRva2VuLFxuICAgICAgbmV0d29yazogcGFyYW1zLm5ldHdvcmtcbiAgICB9KVxuXG4gICAgLy8gU2ltdWxhdGUgcGF5bWVudCBwcm9jZXNzaW5nIGRlbGF5XG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMDApKVxuXG4gICAgLy8gTW9jayBzdWNjZXNzZnVsIHBheW1lbnRcbiAgICBjb25zdCB0eEhhc2ggPSBgeDQwMl8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyLCAxNSl9YFxuICAgIFxuICAgIGNvbnNvbGUubG9nKCfinIUgTW9jayBYNDAyIHBheW1lbnQgY29tcGxldGVkJylcbiAgICBjb25zb2xlLmxvZyhg8J+UlyBUcmFuc2FjdGlvbiBoYXNoOiAke3R4SGFzaH1gKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICB0eEhhc2gsXG4gICAgICBlcnJvcjogdW5kZWZpbmVkXG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZ2V0UGF5bWVudFJlcXVpcmVtZW50cyhyZXNvdXJjZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICBjb25zb2xlLmxvZyhg8J+UjSBNb2NrIFg0MDIgcGF5bWVudCByZXF1aXJlbWVudHMgZm9yOiAke3Jlc291cmNlfWApXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpXG5cbiAgICByZXR1cm4ge1xuICAgICAgc2NoZW1lOiAnZXhhY3QnLFxuICAgICAgbmV0d29yazogJ3N0ZWxsYXInLFxuICAgICAgdG9rZW46ICdVU0RDJyxcbiAgICAgIGFtb3VudDogMTAwMDAwMCwgLy8gMSBVU0RDIGluIG1pY3JvIHVuaXRzXG4gICAgICByZWNpcGllbnQ6ICdHU0VMTEVSMTIzNDU2Nzg5JyxcbiAgICAgIHZhbGlkVW50aWw6IERhdGUubm93KCkgKyAzMDAwMDAgLy8gNSBtaW51dGVzXG4gICAgfVxuICB9XG5cbiAgYXN5bmMgdmVyaWZ5UGF5bWVudChwYXltZW50SGVhZGVyOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBjb25zb2xlLmxvZygn8J+UkCBNb2NrIFg0MDIgcGF5bWVudCB2ZXJpZmljYXRpb24nKVxuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSlcbiAgICBcbiAgICAvLyBNb2NrIGFsd2F5cyByZXR1cm5zIHZhbGlkXG4gICAgcmV0dXJuIHRydWVcbiAgfVxufVxuIl0sIm5hbWVzIjpbIlg0MDJDbGllbnQiLCJwYXkiLCJwYXJhbXMiLCJjb25zb2xlIiwibG9nIiwicmVzb3VyY2UiLCJhbW91bnQiLCJyZWNpcGllbnQiLCJ0b2tlbiIsIm5ldHdvcmsiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJ0eEhhc2giLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciLCJzdWNjZXNzIiwiZXJyb3IiLCJ1bmRlZmluZWQiLCJnZXRQYXltZW50UmVxdWlyZW1lbnRzIiwic2NoZW1lIiwidmFsaWRVbnRpbCIsIkRhdGUiLCJub3ciLCJ2ZXJpZnlQYXltZW50IiwicGF5bWVudEhlYWRlciIsImNvbnN0cnVjdG9yIiwiY29uZmlnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/mock-x402-client.ts\n"));

/***/ })

}]);